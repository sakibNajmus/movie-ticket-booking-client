[{"C:\\WDD\\movie-ticket-booking-client\\src\\index.js":"1","C:\\WDD\\movie-ticket-booking-client\\src\\reportWebVitals.js":"2","C:\\WDD\\movie-ticket-booking-client\\src\\App.js":"3","C:\\WDD\\movie-ticket-booking-client\\src\\components\\Login\\Login.js":"4","C:\\WDD\\movie-ticket-booking-client\\src\\components\\Login\\firebase.config.js":"5","C:\\WDD\\movie-ticket-booking-client\\src\\components\\Schedule\\Schedule.js":"6","C:\\WDD\\movie-ticket-booking-client\\src\\components\\Login\\PrivateRoute\\PrivateRoute.js":"7","C:\\WDD\\movie-ticket-booking-client\\src\\components\\Schedule\\DateCalendar\\DateCalendar.js":"8","C:\\WDD\\movie-ticket-booking-client\\src\\components\\Schedule\\ScheduleForm\\ScheduleForm.js":"9","C:\\WDD\\movie-ticket-booking-client\\src\\components\\Schedule\\Timing\\Timing.js":"10","C:\\WDD\\movie-ticket-booking-client\\src\\components\\Schedule\\TimingCard\\TimingCard.js":"11","C:\\WDD\\movie-ticket-booking-client\\src\\components\\Schedule\\SeatSelector\\SeatSelector.js":"12"},{"size":500,"mtime":499162500000,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":882,"mtime":1608484730294,"results":"16","hashOfConfig":"14"},{"size":2476,"mtime":1608485072404,"results":"17","hashOfConfig":"14"},{"size":372,"mtime":1608480231598,"results":"18","hashOfConfig":"14"},{"size":890,"mtime":1608484724459,"results":"19","hashOfConfig":"14"},{"size":1189,"mtime":1608458081759,"results":"20","hashOfConfig":"14"},{"size":323,"mtime":1608484621258,"results":"21","hashOfConfig":"14"},{"size":1086,"mtime":1608484726389,"results":"22","hashOfConfig":"14"},{"size":1608,"mtime":1608484723186,"results":"23","hashOfConfig":"14"},{"size":1050,"mtime":1608484721739,"results":"24","hashOfConfig":"14"},{"size":5290,"mtime":1608485649996,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"kpq79v",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\WDD\\movie-ticket-booking-client\\src\\index.js",[],["54","55"],"C:\\WDD\\movie-ticket-booking-client\\src\\reportWebVitals.js",[],"C:\\WDD\\movie-ticket-booking-client\\src\\App.js",[],"C:\\WDD\\movie-ticket-booking-client\\src\\components\\Login\\Login.js",["56"],"import React, { useContext } from 'react';\r\nimport './Login.css'\r\nimport { Link } from 'react-router-dom';\r\nimport google from '../../resources/google.png'\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport firebaseConfig from './firebase.config';\r\nimport { UserContext } from '../../App';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext);\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const { from } = location.state || { from: { pathname: \"/schedule\" } };\r\n  \r\n    \r\n    if (firebase.apps.length === 0) {\r\n        firebase.initializeApp(firebaseConfig);\r\n    }\r\n\r\n    // Handle Google Sign-In\r\n  const handleGoogleSignIn = () => {\r\n        var provider = new firebase.auth.GoogleAuthProvider();\r\n        firebase.auth().signInWithPopup(provider).then(function (result) {\r\n        const { displayName, email } = result.user;\r\n        const signedInUser = { name: displayName, email }\r\n        setLoggedInUser(signedInUser);\r\n        storeAuthToken();\r\n        }).catch(function (error) {\r\n        const errorMessage = error.message;\r\n        console.log(errorMessage);\r\n        });\r\n    }\r\n\r\n    const storeAuthToken = () => {\r\n        firebase.auth().currentUser.getIdToken(/* forceRefresh */ true)\r\n          .then(function (idToken) {\r\n            sessionStorage.setItem('token', idToken);\r\n            history.replace(from);\r\n          }).catch(function (error) {\r\n            // Handle error\r\n          });\r\n      }\r\n    return (\r\n    <section>\r\n      <div class=\"container mt-5 pt-5\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4\">\r\n\r\n                    </div>\r\n\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"login-form\">\r\n                            <h3 class=\"mb-3\">Login With</h3>\r\n                            <div class=\"login-alternative\">\r\n                                <button onClick={() => handleGoogleSignIn()}><img src={google} alt=\"\"/>Continue with Google</button>\r\n                            </div>\r\n                            <p>Don't have an account? <Link to=\"/\">Create an Account</Link></p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-4\">\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    </section>\r\n    );\r\n};\r\n\r\nexport default Login;","C:\\WDD\\movie-ticket-booking-client\\src\\components\\Login\\firebase.config.js",[],"C:\\WDD\\movie-ticket-booking-client\\src\\components\\Schedule\\Schedule.js",[],"C:\\WDD\\movie-ticket-booking-client\\src\\components\\Login\\PrivateRoute\\PrivateRoute.js",["57"],"import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useContext } from 'react';\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { UserContext } from '../../../App';\r\n\r\nconst PrivateRoute = ({children, ...rest}) => {\r\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext);\r\n    \r\n    const isLoggedIn = () => {\r\n        const token = sessionStorage.getItem('token');\r\n        if(!token){\r\n          return false;\r\n        }\r\n        const decodedToken = jwt_decode(token);\r\n        // get current time\r\n        const currentTime = new Date().getTime() / 1000;\r\n        // compare the expiration time with the current time\r\n        // will return false if expired and will return true if not expired\r\n        return decodedToken.exp > currentTime;\r\n      }\r\n    return (\r\n        <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        (loggedInUser.email || isLoggedIn()) ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/schedule\",\r\n              state: { from: location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;","C:\\WDD\\movie-ticket-booking-client\\src\\components\\Schedule\\DateCalendar\\DateCalendar.js",[],"C:\\WDD\\movie-ticket-booking-client\\src\\components\\Schedule\\ScheduleForm\\ScheduleForm.js",[],"C:\\WDD\\movie-ticket-booking-client\\src\\components\\Schedule\\Timing\\Timing.js",[],"C:\\WDD\\movie-ticket-booking-client\\src\\components\\Schedule\\TimingCard\\TimingCard.js",["58"],"import React, { useState } from 'react';\r\nimport ScheduleForm from '../ScheduleForm/ScheduleForm';\r\n\r\nconst TimingCard = ({date, timing}) => {\r\n    const [modalIsOpen,setIsOpen] = useState(false);\r\n    function openModal() {\r\n        setIsOpen(true);\r\n    }\r\n\r\n    function closeModal(){\r\n        setIsOpen(false);\r\n    }\r\n    return (\r\n        <div className=\"col-md-4 mb-5\">\r\n            <div className=\"card p-3\">\r\n                <div className=\"card-body text-center\">\r\n                    <h5 className=\"card-title text-brand\">{timing.subject}</h5>\r\n                    <h6>{timing.showTime}</h6>\r\n                    <p>{timing.totalSeats} SEATS AVAILABLE</p>\r\n                    <button onClick={openModal} className=\"btn btn-primary text-uppercase\">Book Ticket</button>\r\n                    <ScheduleForm modalIsOpen={modalIsOpen} date={date} timing={timing} scheduleOn={timing.subject} closeModal={closeModal} date={date}></ScheduleForm>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TimingCard;","C:\\WDD\\movie-ticket-booking-client\\src\\components\\Schedule\\SeatSelector\\SeatSelector.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":12,"column":12,"nodeType":"65","messageId":"66","endLine":12,"endColumn":24},{"ruleId":"63","severity":1,"message":"67","line":8,"column":26,"nodeType":"65","messageId":"66","endLine":8,"endColumn":41},{"ruleId":"68","severity":1,"message":"69","line":21,"column":141,"nodeType":"70","endLine":21,"endColumn":152},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'loggedInUser' is assigned a value but never used.","Identifier","unusedVar","'setLoggedInUser' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]